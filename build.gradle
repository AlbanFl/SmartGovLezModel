plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.smartgov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	mavenCentral artifactUrls: ["https://bio.informatik.uni-jena.de/repository/libs-release-oss/"]

}

dependencies {
	implementation 'com.github.PaulBreugnot:SmartGovSimulator:master-SNAPSHOT'
	implementation 'com.github.PaulBreugnot:SmartGovOsmParser:master-SNAPSHOT'
	implementation 'org.apache.commons:commons-csv:1.6'
	implementation 'org.locationtech.jts:jts-core:1.16.1'
    	implementation 'org.graphstream:gs-algo:1.3'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.hamcrest:hamcrest-all:1.3'
	testImplementation "org.mockito:mockito-core:2.+"
	testImplementation "org.powermock:powermock-api-mockito2:2.0.2"
	testImplementation "org.powermock:powermock-module-junit4:2.0.2"
}

javadoc.destinationDir = file("docs")

task loadEstablishments(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	
	main = "com.smartgov.lez.input.establishment.LoadEstablishments"
	
	if(project.hasProperty("establishments")){
		args project.establishments
	}
}

task runInit(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath

	main = "com.smartgov.lez.core.Init"
	jvmArgs "-Xmx6g"
}

task runMain(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath

	main = "com.smartgov.lez.core.Main"
	jvmArgs "-Xmx6g"
}
